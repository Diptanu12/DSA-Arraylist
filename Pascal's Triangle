Pascal's Triangle
You are given a number n, you are required to print the first n rows of the pascal triangle.

Pascal Triangle

Your task is to complete the function pascalTriangle which receives n as the parameters and returns a 2D array containing the first n rows of the pascal's triangle.

Input Format
You are given a single integer n representing the number of rows of pascal's triangle.

Output Format
Print n lines of output, where ith line represents the ith row of the triangle.

Example 1
Input

3
Output

1
1 1
1 2 1
Example 2
Input

5
Output

1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
Constraints:
1<= n <= 30

Topics
Math
Companies
Microsoft
Adobe
Goldman Sachs
Apple
Bloomberg
VMware
Amazon
Yahoo
Samsung
Uber



import java.util.*;

public class Main {
    public static void main(String[] args) throws Throwable {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        ArrayList<ArrayList<Integer>> triangle = pascalTriangle(n);
        for (int i = 0; i < triangle.size(); i++) {
            for (int j = 0; j < triangle.get(i).size(); j++) {
                System.out.print(triangle.get(i).get(j) + " ");
            }
            System.out.println();
        }
    }

	public static ArrayList<ArrayList<Integer>> pascalTriangle(int numRows) 
	{
	    ArrayList<ArrayList<Integer>> answer = new ArrayList<ArrayList<Integer>>();
	    
	    ArrayList<Integer> firstRow = new ArrayList<Integer>();
	    firstRow.add(1);
	    
	    answer.add(firstRow);
	    
	    for(int i=1; i<=numRows-1; i=i+1)
	    {
	        ArrayList<Integer> currentRow = new ArrayList<Integer>();
	        
	        currentRow.add(1);
	        
	        int numberOfMiddleElement = i - 1;
	        
	        // middle elements 
	        // i --> row 
	        
	        for(int j=1; j<=numberOfMiddleElement; j=j+1)
	        {
	            int middleElement = answer.get(i-1).get(j) + answer.get(i-1).get(j-1);
	            currentRow.add(middleElement);
	        }
	        
	        currentRow.add(1);
	        
	        answer.add(currentRow);
	    }
	    
	    return answer;
    }
}
